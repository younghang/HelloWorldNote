在Value目录下新建XML文件
styles文件为系统默认文件 
颜色具有继承特性 子控件可以继承父控件的设定

Theme.AppCompat.Light.NoActionBar
<style name="theme2" parent="android:Theme.Holo.NoActionBar">
设置parent属性为这个的时候，还是会有标题栏，但是，没有标题栏下面的阴影了
parent为AppCompat的NOActionBar的时候会真的没有Actionbar
<item name="android:windowNoTitle">true</item><!-->meiyouyong<!-->
<item name="android:textSize">14sp</item>
<item name="android:colorBackground">#0bd0f7</item><!-->meiyouyong<!-->
<item name="android:textColor">#000000</item>
<item name="colorPrimary">#0bd0f7</item> 设置标题栏背景
<item name="colorPrimaryDark">#0bd0f7</item> 状态栏背景
<item name="colorAccent">#0bd0f7</item> 内容控件默认颜色
-----------设置Theme------------------------
Java在setContent前面设置主题 或者在Manifest中设置theme：
setTheme(R.style.theme);   
android:theme="@style/theme">

--------------------Style应用-------------------------
Style是针对窗体元素级别的，改变指定控件或者Layout的样式

Theme是针对窗体级别的，改变窗体样式；
<style name="mystyle" parent="AppBaseTheme">
        <item name="android:textSize">18sp</item>
        <item name="android:textColor">#ff0000</item>
    </style>
<item name="属性">属性值</item>
1.在布局文件中引用style

<TextView
        style="@style/mystyle"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="@string/hello_world" />
2、在程序中设置style

 text.setTextAppearance(this, R.style.mystyle);



-----------------------------------Theme中嵌套Style------------
<?xml version="1.0" encoding="utf-8"?>  
<resources>           
	<style name="BasicButtonTheme">  
                <item name="android:buttonStyle">@style/basicbuttonstyle</item>  
                <item name="android:windowBackground">@android:color/transparent</item>     
                <item name="android:windowIsTranslucent">true</item>     
	</style>  
  
</resources>  


                        		Style中又嵌套Seclector
<resources>  
	<style name="BasicButtonStyle" parent="@android:style/Widget.Button">  
                <item name="android:gravity">center_vertical|center_horizontal</item>  
                <item name="android:textColor">#ffffffff</item>  
                <item name="android:shadowColor">#ff000000</item>  
                <item name="android:shadowDx">0</item>  
                <item name="android:shadowDy">-1</item>  
                <item name="android:shadowRadius">0.2</item>  
                <item name="android:textSize">16dip</item>  
                <item name="android:textStyle">bold</item>  
                <item name="android:background">@drawable/btn_custom</item>  

	</style>  
  
</resources>  

---------------------------安卓主题-----------------------
?android:theme="@android:style/Theme.Dialog"   将一个Activity显示为对话框模式
?android:theme="@android:style/Theme.NoTitleBar"  不显示应用程序标题栏
?android:theme="@android:style/Theme.NoTitleBar.Fullscreen"  不显示应用程序标题栏，并全屏
?android:theme="Theme.Light"  背景为白色
?android:theme="Theme.Light.NoTitleBar"  白色背景并无标题栏 
?android:theme="Theme.Light.NoTitleBar.Fullscreen"  白色背景，无标题栏，全屏
?android:theme="Theme.Black"  背景黑色
?android:theme="Theme.Black.NoTitleBar"  黑色背景并无标题栏
?android:theme="Theme.Black.NoTitleBar.Fullscreen"    黑色背景，无标题栏，全屏
?android:theme="Theme.Wallpaper"  用系统桌面为应用程序背景
?android:theme="Theme.Wallpaper.NoTitleBar"  用系统桌面为应用程序背景，且无标题栏
?android:theme="Theme.Wallpaper.NoTitleBar.Fullscreen"  用系统桌面为应用程序背景，无标题栏，全屏
?android:theme="Translucent"
?android:theme="Theme.Translucent.NoTitleBar" 半透明，无标题
?android:theme="Theme.Translucent.NoTitleBar.Fullscreen" 半透明，无标题，全屏
?android:theme="Theme.Panel" 面板风格显示
?android:theme="Theme.Light.Panel" 平板风格显示

colorPrimaryDark
狀態列背景色。
設定在 style 的屬性中。
textColorPrimary
App bar 上的標題與更多選單中的文字顏色。
設定在 style 的屬性中
App bar 的背景色
Actionbar 的背景色設定在 style 中的 colorPrimary。
Toolbar 的背景色設定其 layout 檔中的 background 的屬性中。
colorAccent
各控制元件(如：check box、switch 或是 radoi) 被勾選 (checked) 或是選定 (selected) 的顏色。
設定在 style 的屬性中
colorControlNormal
各控制元件的預設顏色。
設定在 style 的屬性中
windowBackground
App 的背景色。
設定在 style 的屬性中
navigationBarColor
導航列的背景色，但只能用在 API Level 21 (Android 5) 以上的版本
設定在 style 的屬性中